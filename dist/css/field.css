/* Nova Field CSS */
.container {
    width: 100%
}
@media (min-width: 640px) {
    .container {
        max-width: 640px
    }
}
@media (min-width: 768px) {
    .container {
        max-width: 768px
    }
}
@media (min-width: 1024px) {
    .container {
        max-width: 1024px
    }
}
@media (min-width: 1280px) {
    .container {
        max-width: 1280px
    }
}
@media (min-width: 1536px) {
    .container {
        max-width: 1536px
    }
}
.image-markup :is(.pointer-events-none) {
    pointer-events: none
}
.image-markup :is(.absolute) {
    position: absolute
}
.image-markup :is(.mb-4) {
    margin-bottom: 1rem
}
.image-markup :is(.ml-4) {
    margin-left: 1rem
}
.image-markup :is(.ml-6) {
    margin-left: 1.5rem
}
.image-markup :is(.ml-auto) {
    margin-left: auto
}
.image-markup :is(.mr-2) {
    margin-right: 0.5rem
}
.image-markup :is(.mt-1) {
    margin-top: 0.25rem
}
.image-markup :is(.mt-12) {
    margin-top: 3rem
}
.image-markup :is(.mt-3) {
    margin-top: 0.75rem
}
.image-markup :is(.flex) {
    display: flex
}
.image-markup :is(.inline-flex) {
    display: inline-flex
}
.image-markup :is(.grid) {
    display: grid
}
.image-markup :is(.size-0) {
    width: 0px;
    height: 0px
}
.image-markup :is(.w-16) {
    width: 4rem
}
.image-markup :is(.cursor-pointer) {
    cursor: pointer
}
.image-markup :is(.resize) {
    resize: both
}
.image-markup :is(.grid-cols-4) {
    grid-template-columns: repeat(4, minmax(0, 1fr))
}
.image-markup :is(.flex-col) {
    flex-direction: column
}
.image-markup :is(.items-center) {
    align-items: center
}
.image-markup :is(.justify-start) {
    justify-content: flex-start
}
.image-markup :is(.justify-end) {
    justify-content: flex-end
}
.image-markup :is(.justify-center) {
    justify-content: center
}
.image-markup :is(.gap-x-6) {
    -moz-column-gap: 1.5rem;
         column-gap: 1.5rem
}
.image-markup :is(.gap-y-2) {
    row-gap: 0.5rem
}
.image-markup :is(.space-x-1 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.25rem * var(--tw-space-x-reverse));
    margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)))
}
.image-markup :is(.space-y-2 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0.5rem * var(--tw-space-y-reverse))
}
.image-markup :is(.space-y-4 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * var(--tw-space-y-reverse))
}
.image-markup :is(.break-words) {
    overflow-wrap: break-word
}
.image-markup :is(.rounded) {
    border-radius: 0.25rem
}
.image-markup :is(.border) {
    border-width: 1px
}
.image-markup :is(.border-gray-200) {
    --tw-border-opacity: 1;
    border-color: rgb(229 231 235 / var(--tw-border-opacity))
}
.image-markup :is(.pt-6) {
    padding-top: 1.5rem
}
.image-markup :is(.text-sm) {
    font-size: 0.875rem;
    line-height: 1.25rem
}
.image-markup :is(.text-gray-500) {
    --tw-text-opacity: 1;
    color: rgb(107 114 128 / var(--tw-text-opacity))
}
.image-markup :is(.opacity-0) {
    opacity: 0
}


.btn {
    position: relative;
    display: inline-flex;
    height: 2.25rem;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    align-items: center;
    justify-content: center;
    border-radius: 0.25rem;
    border-width: 1px;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    text-align: left;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 700;
    --tw-ring-color: rgba(var(--colors-primary-200))
}


.btn:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}


.btn:disabled {
    cursor: not-allowed
}


.btn:where(.dark, .dark *) {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(75 85 99 / var(--tw-ring-opacity))
}

.btn-icon {
    width: 2.25rem;
    padding-left: 0px;
    padding-right: 0px
}

.btn.btn-primary {
    border-color: rgba(var(--colors-primary-500));
    background-color: rgba(var(--colors-primary-500));
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.btn.btn-primary:where(.dark, .dark *) {
    --tw-text-opacity: 1;
    color: rgb(17 24 39 / var(--tw-text-opacity))
}

.btn.btn-primary:not(:disabled):hover {
    border-color: rgba(var(--colors-primary-400));
    background-color: rgba(var(--colors-primary-400))
}

.btn.btn-text {
    border-color: transparent;
    background-color: transparent;
    --tw-text-opacity: 1;
    color: rgb(75 85 99 / var(--tw-text-opacity))
}

.btn.btn-text:where(.dark, .dark *) {
    --tw-text-opacity: 1;
    color: rgb(156 163 175 / var(--tw-text-opacity))
}

.btn.btn-text:not(:disabled):hover {
    background-color: rgb(55 65 81 / 0.05)
}

.btn.btn-text:not(:disabled):hover:where(.dark, .dark *) {
    --tw-bg-opacity: 1;
    background-color: rgb(3 7 18 / var(--tw-bg-opacity))
}

.btn.btn-secondary {
    --tw-border-opacity: 1;
    border-color: rgb(229 231 235 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: rgb(75 85 99 / var(--tw-text-opacity))
}

.btn.btn-secondary:where(.dark, .dark *) {
    --tw-border-opacity: 1;
    border-color: rgb(55 65 81 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: rgb(156 163 175 / var(--tw-text-opacity))
}

.btn.btn-secondary:not(:disabled):hover {
    background-color: rgb(55 65 81 / 0.05)
}

.btn.btn-secondary:not(:disabled):hover:where(.dark, .dark *) {
    --tw-bg-opacity: 1;
    background-color: rgb(3 7 18 / var(--tw-bg-opacity))
}

.btn.btn-destructive {
    --tw-border-opacity: 1;
    border-color: rgb(239 68 68 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(239 68 68 / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity))
}

.btn.btn-destructive:where(.dark, .dark *) {
    --tw-text-opacity: 1;
    color: rgb(69 10 10 / var(--tw-text-opacity))
}

.btn.btn-destructive:not(:disabled):hover {
    --tw-border-opacity: 1;
    border-color: rgb(248 113 113 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(248 113 113 / var(--tw-bg-opacity))
}

@media (min-width: 768px) {
    .image-markup :is(.md\:flex-row) {
        flex-direction: row
    }
    .image-markup :is(.md\:items-center) {
        align-items: center
    }
    .image-markup :is(.md\:justify-end) {
        justify-content: flex-end
    }
    .image-markup :is(.md\:space-x-3 > :not([hidden]) ~ :not([hidden])) {
        --tw-space-x-reverse: 0;
        margin-right: calc(0.75rem * var(--tw-space-x-reverse));
        margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)))
    }
    .image-markup :is(.md\:space-y-0 > :not([hidden]) ~ :not([hidden])) {
        --tw-space-y-reverse: 0;
        margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(0px * var(--tw-space-y-reverse))
    }
}

.image-markup :is(.dark\:border-gray-700:where(.dark, .dark *)) {
    --tw-border-opacity: 1;
    border-color: rgb(55 65 81 / var(--tw-border-opacity))
}

